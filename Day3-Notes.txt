git --version

git --help

introduce yourself to git 

configure your user-name and user-email to git

// local - specific user-account

// global - any user-account

git config --local user.name "user-name"

git config --local user.email "user-email-address"

============

git config --global user.name "user-name"

git config --global user.email "user-email-address"

===============

git config

or 

git config --list

or

git config user.name

or

git config user.email

==============================

Wednesday

SwiggyProject [SwiggyRepo]

2 bugs

Kiran
kiran@swiggy.com

remote server/github 

2 commits

1 commit - Kiran / kiran@swiggy.com
2 commit - Kiran / kiran@swiggy.com

=============

Thursday

ZomatoProject [ZomatoRepo]

1 prod bug

Kiran
kiran@zomato.com

remote server/github 

1 commits

1 commit - Kiran / kiran@zomato.com

===================================

git init

// start with your dev/qa/pm work

git status

git add fileName

or

git add fileName1 fileName2 fileName3

or

git add -A

or

git add .

or

git add *.txt *.xlsx *.java

or

git add *.*


=============

git commit -m "devp sign-up code & completed unit test"

e8baad8

=============

git status

git log
or
git log --stat

===============

git diff

to discard your recent/modified changes,

git restore fileName1 fileName2

git restore --staged fileName1 fileName2


================

Day#2

git â€“-help
git help <verb>
git <verb> --help

git commit --amend -m "updatedCommitMsgHere"

git rebase -i HEAD~3

git squash

git fixup

git config --global core.editor "pathOfYourEditorFile"

refer https://git-scm.com/book/en/v2/Appendix-C%3A-Git-Commands-Setup-and-Config

====================

Day#3

touch .gitignore

github intro //account creation, login, repo [public, private], clone via https

create an account in github
login to github account

create a new repo in github [public repository]

https://github.com/kirangopisetty/SwiggyProject.git

push our local changes onto remote rep


git push -u https://github.com/kirangopisetty/SwiggyProject.git master

git push


To download remote repo onto your local PC,

(i) UI download
(ii) command based [clone + https]

git clone githubRepoURL

git clone https://github.com/kirangopisetty/SwiggyProject.git

git pull githubRepoURL master

we can create an alias for our githubRepoURL

git remote add aliasName githubRepoURL

origin1 = aliasName

git remote -v

git remote rename oldAliasName newAliasName

git remote remove aliasName

:) i hav an aliasName

git push origin master

push/pull/add/rename alias

branching [create/switch/checkout/merge/rebase/delete local/remote]

git branch branchName

git branch jyothiDevBranch

git branch

git checkout branchName
git switch branchName

git branch -d branchName
git branch --delete branchName

git push githubRepoURL branchName

git push githubRepoURL -d branchName
git push githubRepoURL -- delete branchName

git 

feature/logout
bugfix/loginBug
hotfix/signUp
documentation/userGuide

display branches locally/remote/all

git diff branchName1 branchName2
git diff branchName
git diff master

setup email notifications
===============

Day#4

cherry-pick
stash
merge-conflicts
merge vs rebase
git worktree
logs


.gitignore

clone
push
pull
alias[create, rename, remove, display]
branch [create, delete] // locally, remote
merge [branch to master]
diff [branch to branch]

https://harman.webex.com/harman/j.php?MTID=m28809c4d25be75ae4881e61c934ac667










